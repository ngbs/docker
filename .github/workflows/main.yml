# This is a basic workflow to help you get started with Actions
name: CI to Docker Hub

on:
  push:
    # branches: [ master ]
    # paths:
    #   - '**/**'
    #   - '.github/workflows/main.yml'
    paths-ignore:
      - '**/**'
  # UTC +8 https://tool.lu/crontab/
  schedule:
    - cron: "0 22 */29 * *"
  # pull_request:
  #   branches: [ master ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build-basic:
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        id: buildx

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v3
        id: docker_build_apline_latest
        with:
          context: ./alpine
          file: ./alpine/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/alpine:latest
          builder: ${{ steps.buildx.outputs.name }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v3
        id: docker_build_apline_edge
        with:
          context: ./alpine
          file: ./alpine/Dockerfile.edge
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/alpine:edge
          builder: ${{ steps.buildx.outputs.name }}

      - name: Image digest
        run: |
          echo ${{ steps.docker_build_apline_latest.outputs.digest }}
          echo ${{ steps.docker_build_apline_edge.outputs.digest }}

  build-naiveproxy:
    needs: build-basic
    runs-on: ubuntu-latest
    steps:
      - name: Set Variables
        run: |
          echo "NAIVE_VERSION=$(curl -fsSL https://api.github.com/repos/klzgrad/naiveproxy/releases/latest | grep '"tag_name":' | head -n 1 | awk -F ":" '{print $2}' | sed 's/\"//g;s/v//g;s/,//g;s/ //g')" >> $GITHUB_ENV
        shell: bash

      - name: Check Out Repo
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        id: buildx

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v3
        id: docker_build_naiveproxy
        with:
          context: ./naive
          file: ./naive/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/naive:latest
            ${{ secrets.DOCKER_HUB_USERNAME }}/naive:${{ env.NAIVE_VERSION }}
          builder: ${{ steps.buildx.outputs.name }}

      - name: Image digest
        run: |
          echo ${{ steps.docker_build_naiveproxy.outputs.digest }}

  build-syncthing:
    needs: build-basic
    runs-on: ubuntu-latest
    steps:
      - name: Set Variables
        run: |
          echo "SYNCTHING_VERSION=$(curl -fsSL https://api.github.com/repos/syncthing/syncthing/releases/latest | grep '"tag_name":' | head -n 1 | awk -F ":" '{print $2}' | sed 's/\"//g;s/v//g;s/,//g;s/ //g')" >> $GITHUB_ENV
        shell: bash

      - name: Check Out Repo
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        id: buildx

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v3
        id: docker_build_syncthing
        with:
          context: ./syncthing
          file: ./syncthing/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/syncthing:latest
            ${{ secrets.DOCKER_HUB_USERNAME }}/syncthing:${{ env.SYNCTHING_VERSION }}
          builder: ${{ steps.buildx.outputs.name }}

      - name: Image digest
        run: |
          echo ${{ steps.docker_build_syncthing.outputs.digest }}

  build-lego:
    needs: build-basic
    runs-on: ubuntu-latest
    steps:
      - name: Set Variables
        run: |
          echo "LEGO_VERSION=$(curl -fsSL https://api.github.com/repos/go-acme/lego/releases/latest | grep '"tag_name":' | head -n 1 | awk -F ":" '{print $2}' | sed 's/\"//g;s/v//g;s/,//g;s/ //g')" >> $GITHUB_ENV
        shell: bash

      - name: Check Out Repo
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        id: buildx

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v3
        id: docker_build_lego
        with:
          context: ./lego
          file: ./lego/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/lego:latest
            ${{ secrets.DOCKER_HUB_USERNAME }}/lego:${{ env.LEGO_VERSION }}
          builder: ${{ steps.buildx.outputs.name }}

      - name: Image digest
        run: |
          echo ${{ steps.docker_build_lego.outputs.digest }}

  build-traefik:
    needs: build-basic
    runs-on: ubuntu-latest
    steps:
      - name: Set Variables
        run: |
          echo "TRAEFIK_VERSION=$(curl -fsSL https://api.github.com/repos/traefik/traefik/releases/latest | grep '"tag_name":' | head -n 1 | awk -F ":" '{print $2}' | sed 's/\"//g;s/v//g;s/,//g;s/ //g')" >> $GITHUB_ENV
        shell: bash

      - name: Check Out Repo
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        id: buildx

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v3
        id: docker_build_traefik
        with:
          context: ./traefik
          file: ./traefik/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/traefik:latest
            ${{ secrets.DOCKER_HUB_USERNAME }}/traefik:${{ env.TRAEFIK_VERSION }}
          builder: ${{ steps.buildx.outputs.name }}

      - name: Image digest
        run: |
          echo ${{ steps.docker_build_traefik.outputs.digest }}

  build-caddy:
    needs: build-basic
    runs-on: ubuntu-latest
    steps:
      - name: Set Variables
        run: |
          echo "CADDY_VERSION=$(curl -fsSL https://api.github.com/repos/caddyserver/caddy/releases/latest | grep '"tag_name":' | head -n 1 | awk -F ":" '{print $2}' | sed 's/\"//g;s/v//g;s/,//g;s/ //g')" >> $GITHUB_ENV
        shell: bash

      - name: Check Out Repo
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        id: buildx

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v3
        id: docker_build_caddy
        with:
          context: ./caddy/v2
          file: ./caddy/v2/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/caddy:latest
            ${{ secrets.DOCKER_HUB_USERNAME }}/caddy:${{ env.CADDY_VERSION }}
          builder: ${{ steps.buildx.outputs.name }}

      - name: Image digest
        run: |
          echo ${{ steps.docker_build_caddy.outputs.digest }}

  build-frp:
    needs: build-basic
    runs-on: ubuntu-latest
    steps:
      - name: Set Variables
        run: |
          echo "FRP_VERSION=$(curl -fsSL https://api.github.com/repos/fatedier/frp/releases/latest | grep '"tag_name":' | head -n 1 | awk -F ":" '{print $2}' | sed 's/\"//g;s/v//g;s/,//g;s/ //g')" >> $GITHUB_ENV
        shell: bash

      - name: Check Out Repo
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        id: buildx

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v3
        id: docker_build_frps
        with:
          context: ./frp
          file: ./frp/Dockerfile.server
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/frp:server
            ${{ secrets.DOCKER_HUB_USERNAME }}/frp:${{ env.FRP_VERSION }}-server
          builder: ${{ steps.buildx.outputs.name }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v3
        id: docker_build_frpc
        with:
          context: ./frp
          file: ./frp/Dockerfile.client
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/frp:client
            ${{ secrets.DOCKER_HUB_USERNAME }}/frp:${{ env.FRP_VERSION }}-client
          builder: ${{ steps.buildx.outputs.name }}

      - name: Image digest
        run: |
          echo ${{ steps.docker_build_frps.outputs.digest }}
          echo ${{ steps.docker_build_frpc.outputs.digest }}
