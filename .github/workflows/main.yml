# This is a basic workflow to help you get started with Actions

name: CI to Docker Hub

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  # push:
  #   branches: [ master ]
  # pull_request:
  #   branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-basic:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Check Out Repo
        uses: actions/checkout@v2

      # This is the a separate action that sets up buildx runner
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      # So now you can use Actions' own caching!
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build Alpine Latest and push
        id: docker_build_apline_latest
        uses: docker/build-push-action@v2
        with:
          context: ./alpine
          file: ./alpine/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/alpine:latest
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Build Alpine Edge and push
        id: docker_build_apline_edge
        uses: docker/build-push-action@v2
        with:
          context: ./alpine
          file: ./alpine/Dockerfile.edge
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/alpine:edge
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Image digest
        run: echo ${{ steps.docker_build_apline_latest.outputs.digest }} \
          echo ${{ steps.docker_build_apline_edge.outputs.digest }}

      # Runs a single command using the runners shell
      # - name: Run a one-line script
      #   run: echo Hello, world!
      # Runs a set of commands using the runners shell
      # - name: Run a multi-line script
      #   run: |
      #     echo Add other actions to build,
      #     echo test, and deploy your project.

  build-chinadns-ng:
    needs: build-basic
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build ChinaDNS-NG and push
        id: docker_build_chinadns_ng
        uses: docker/build-push-action@v2
        with:
          context: ./chinadns-ng
          file: ./chinadns-ng/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/chinadns-ng:latest
            ${{ secrets.DOCKER_HUB_USERNAME }}/chinadns-ng:1.0-beta25
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Image digest
        run: |
          echo ${{ steps.docker_build_chinadns_ng.outputs.digest }}

  build-dnscrypt-proxy:
    needs: build-basic
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build DNSCrypt-Proxy and push
        id: docker_build_dnscrypt_proxy
        uses: docker/build-push-action@v2
        with:
          context: ./dnscrypt-proxy
          file: ./dnscrypt-proxy/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/dnscrypt-proxy:latest
            ${{ secrets.DOCKER_HUB_USERNAME }}/dnscrypt-proxy:2.0.46-beta3
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Image digest
        run: |
          echo ${{ steps.docker_build_dnscrypt_proxy.outputs.digest }}

  build-doh-server:
    needs: build-basic
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build doh-server and push
        id: docker_build_doh_server
        uses: docker/build-push-action@v2
        with:
          context: ./doh-server
          file: ./doh-server/Dockerfile.server
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/doh-server:latest
            ${{ secrets.DOCKER_HUB_USERNAME }}/doh-server:2.2.6
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Image digest
        run: |
          echo ${{ steps.docker_build_doh_server.outputs.digest }}

  build-xray:
    needs: build-basic
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build Xray-core and push
        id: docker_build_xray_core
        uses: docker/build-push-action@v2
        with:
          context: ./xray
          file: ./xray/Dockerfile.xray
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/xray:latest
            ${{ secrets.DOCKER_HUB_USERNAME }}/xray:1.4.2
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Image digest
        run: |
          echo ${{ steps.docker_build_xray_core.outputs.digest }}

  build-v2ray:
    needs: build-basic
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build V2ray-core and push
        id: docker_build_v2ray_core
        uses: docker/build-push-action@v2
        with:
          context: ./v2ray
          file: ./v2ray/Dockerfile.fly
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/v2ray:latest
            ${{ secrets.DOCKER_HUB_USERNAME }}/v2ray:4.40.1
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Image digest
        run: |
          echo ${{ steps.docker_build_v2ray_core.outputs.digest }}

  build-naiveproxy:
    needs: build-basic
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build naiveproxy and push
        id: docker_build_naiveproxy
        uses: docker/build-push-action@v2
        with:
          context: ./naive
          file: ./naive/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/naive:latest
            ${{ secrets.DOCKER_HUB_USERNAME }}/naive:92.0.4515.107-1
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Image digest
        run: |
          echo ${{ steps.docker_build_naiveproxy.outputs.digest }}

  build-syncthing:
    needs: build-basic
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build Syncthing and push
        id: docker_build_syncthing
        uses: docker/build-push-action@v2
        with:
          context: ./syncthing
          file: ./syncthing/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/syncthing:latest
            ${{ secrets.DOCKER_HUB_USERNAME }}/syncthing:1.18.1
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Image digest
        run: |
          echo ${{ steps.docker_build_syncthing.outputs.digest }}

  build-kms:
    needs: build-basic
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build KMS and push
        id: docker_build_kms
        uses: docker/build-push-action@v2
        with:
          context: ./kms
          file: ./kms/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/kms:latest
            ${{ secrets.DOCKER_HUB_USERNAME }}/kms:svn1113
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Image digest
        run: |
          echo ${{ steps.docker_build_kms.outputs.digest }}

  build-lego:
    needs: build-basic
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build lego and push
        id: docker_build_lego
        uses: docker/build-push-action@v2
        with:
          context: ./lego
          file: ./lego/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/lego:latest
            ${{ secrets.DOCKER_HUB_USERNAME }}/lego:4.4.0
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Image digest
        run: |
          echo ${{ steps.docker_build_lego.outputs.digest }}

  build-traefik:
    needs: build-basic
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build Traefik and push
        id: docker_build_traefik
        uses: docker/build-push-action@v2
        with:
          context: ./traefik
          file: ./traefik/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/traefik:latest
            ${{ secrets.DOCKER_HUB_USERNAME }}/traefik:2.4.9
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Image digest
        run: |
          echo ${{ steps.docker_build_traefik.outputs.digest }}

  build-samba:
    needs: build-basic
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build Samba and push
        id: docker_build_samba
        uses: docker/build-push-action@v2
        with:
          context: ./samba
          file: ./samba/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/samba:latest
            ${{ secrets.DOCKER_HUB_USERNAME }}/samba:4.12.2
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Image digest
        run: |
          echo ${{ steps.docker_build_samba.outputs.digest }}

  build-caddy:
    needs: build-basic
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build Caddy and push
        id: docker_build_caddy
        uses: docker/build-push-action@v2
        with:
          context: ./caddy/v2
          file: ./caddy/v2/Dockerfile.lxhao61
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/caddy:latest
            ${{ secrets.DOCKER_HUB_USERNAME }}/caddy:2.4.3
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Image digest
        run: |
          echo ${{ steps.docker_build_caddy.outputs.digest }}

  build-udp2raw:
    needs: build-basic
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build udp2raw and push
        id: docker_build_udp2raw
        uses: docker/build-push-action@v2
        with:
          context: ./udp2raw
          file: ./udp2raw/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/udp2raw:latest
            ${{ secrets.DOCKER_HUB_USERNAME }}/udp2raw:20200818.0
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Image digest
        run: |
          echo ${{ steps.docker_build_udp2raw.outputs.digest }}

  build-tinyfec:
    needs: build-basic
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build tinyfec and push
        id: docker_build_tinyfec
        uses: docker/build-push-action@v2
        with:
          context: ./tinyfec
          file: ./tinyfec/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/tinyfec:latest
            ${{ secrets.DOCKER_HUB_USERNAME }}/tinyfec:20210116.0
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Image digest
        run: |
          echo ${{ steps.docker_build_tinyfec.outputs.digest }}

  build-frp:
    needs: build-basic
    runs-on: ubuntu-latest
    steps:
      - name: Set Variables
        run: |
          export FRP_VERSION=$(curl -fsSL https://api.github.com/repos/fatedier/frp/releases/latest | grep '"tag_name":' | head -n 1 | awk -F ":" '{print $2}' | sed 's/\"//g;s/v//g;s/,//g;s/ //g')
          cat $FRP_VERSION
        shell: bash

      - name: Check Out Repo
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build frps and push
        id: docker_build_frps
        uses: docker/build-push-action@v2
        with:
          context: ./frp
          file: ./frp/Dockerfile.server
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/frp:latest
            ${{ secrets.DOCKER_HUB_USERNAME }}/frp:${{ env.FRP_VERSION }}-server
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Build frpc and push
        id: docker_build_frpc
        uses: docker/build-push-action@v2
        with:
          context: ./frp
          file: ./frp/Dockerfile.client
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/frp:latest
            ${{ secrets.DOCKER_HUB_USERNAME }}/frp:${{ env.FRP_VERSION }}-client
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Image digest
        run: |
          echo ${{ steps.docker_build_frps.outputs.digest }}
          echo ${{ steps.docker_build_frpc.outputs.digest }}

  build-kcptun:
    needs: build-basic
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build kcptun-server and push
        id: docker_build_kcptun_server
        uses: docker/build-push-action@v2
        with:
          context: ./kcptun
          file: ./kcptun/Dockerfile.server
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/kcptun:latest
            ${{ secrets.DOCKER_HUB_USERNAME }}/kcptun:20210624-server
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Build kcptun-client and push
        id: docker_build_kcptun_client
        uses: docker/build-push-action@v2
        with:
          context: ./kcptun
          file: ./kcptun/Dockerfile.client
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/kcptun:latest
            ${{ secrets.DOCKER_HUB_USERNAME }}/kcptun:20210624-client
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Image digest
        run: |
          echo ${{ steps.docker_build_kcptun_server.outputs.digest }}
          echo ${{ steps.docker_build_kcptun_client.outputs.digest }}

  # build-trojan-go:
  #   needs: build-basic
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Check Out Repo
  #       uses: actions/checkout@v2

  #     - name: Set up Docker Buildx
  #       id: buildx
  #       uses: docker/setup-buildx-action@v1

  #     - name: Cache Docker layers
  #       uses: actions/cache@v2
  #       with:
  #         path: /tmp/.buildx-cache
  #         key: ${{ runner.os }}-buildx-${{ github.sha }}
  #         restore-keys: |
  #           ${{ runner.os }}-buildx-

  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v1
  #       with:
  #         username: ${{ secrets.DOCKER_HUB_USERNAME }}
  #         password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

  #     - name: Build trojan-go-server and push
  #       id: docker_build_trojan_go_server
  #       uses: docker/build-push-action@v2
  #       with:
  #         context: ./trojan-go
  #         file: ./trojan-go/Dockerfile.server
  #         push: true
  #         tags: |
  #           ${{ secrets.DOCKER_HUB_USERNAME }}/trojan-go:latest
  #           ${{ secrets.DOCKER_HUB_USERNAME }}/trojan-go:0.10.4-server
  #         builder: ${{ steps.buildx.outputs.name }}
  #         cache-from: type=local,src=/tmp/.buildx-cache
  #         cache-to: type=local,dest=/tmp/.buildx-cache-new

  #     - name: Build trojan-go-client and push
  #       id: docker_build_trojan_go_client
  #       uses: docker/build-push-action@v2
  #       with:
  #         context: ./trojan-go
  #         file: ./trojan-go/Dockerfile.client
  #         push: true
  #         tags: |
  #           ${{ secrets.DOCKER_HUB_USERNAME }}/trojan-go:latest
  #           ${{ secrets.DOCKER_HUB_USERNAME }}/trojan-go:0.10.4-client
  #         builder: ${{ steps.buildx.outputs.name }}
  #         cache-from: type=local,src=/tmp/.buildx-cache
  #         cache-to: type=local,dest=/tmp/.buildx-cache-new

  #     - name: Move cache
  #       run: |
  #         rm -rf /tmp/.buildx-cache
  #         mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  #     - name: Image digest
  #       run: |
  #         echo ${{ steps.docker_build_trojan_go_server.outputs.digest }}
  #         echo ${{ steps.docker_build_trojan_go_client.outputs.digest }}

  # build-encrypted-dns:
  #   needs: build-basic
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Check Out Repo
  #       uses: actions/checkout@v2

  #     - name: Set up Docker Buildx
  #       id: buildx
  #       uses: docker/setup-buildx-action@v1

  #     - name: Cache Docker layers
  #       uses: actions/cache@v2
  #       with:
  #         path: /tmp/.buildx-cache
  #         key: ${{ runner.os }}-buildx-${{ github.sha }}
  #         restore-keys: |
  #           ${{ runner.os }}-buildx-

  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v1
  #       with:
  #         username: ${{ secrets.DOCKER_HUB_USERNAME }}
  #         password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

  #     - name: Build encrypted-dns and push
  #       id: docker_build_encrypted_dns
  #       uses: docker/build-push-action@v2
  #       with:
  #         context: ./encrypted-dns
  #         file: ./encrypted-dns/Dockerfile
  #         push: true
  #         tags: |
  #           ${{ secrets.DOCKER_HUB_USERNAME }}/encrypted-dns:latest
  #           ${{ secrets.DOCKER_HUB_USERNAME }}/encrypted-dns:0.9.1
  #         builder: ${{ steps.buildx.outputs.name }}
  #         cache-from: type=local,src=/tmp/.buildx-cache
  #         cache-to: type=local,dest=/tmp/.buildx-cache-new

  #     - name: Move cache
  #       run: |
  #         rm -rf /tmp/.buildx-cache
  #         mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  #     - name: Image digest
  #       run: |
  #         echo ${{ steps.docker_build_encrypted_dns.outputs.digest }}

  # deploy:
  #   needs: [build-chinadns-ng, build-dnscrypt-proxy, build-doh-server, build-xray, build-v2ray, build-naiveproxy, build-syncthing, build-kms, build-lego, build-traefik, build-samba, build-caddy, build-udp2raw, build-tinyfec, build-frp, build-kcptun]
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Deploy to VPS
  #       uses: appleboy/ssh-action@master
  #       with:
  #         host: ${{ secrets.VPS_SSH_HOSTNAME }}
  #         username: ${{ secrets.VPS_SSH_USERNAME }}
  #         key: ${{ secrets.VPS_SSH_KEY }}
  #         port: ${{ secrets.VPS_SSH_PORT }}
  #         sync: true
  #         script_stop: true
  #         script: |
  #           cd devops/docker
  #           bash launcher.sh